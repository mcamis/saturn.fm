{"version":3,"file":"js/404.4e8d20418d29a65def13.js","mappings":"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","sources":["webpack://saturn-fm/./src/utilities/files.ts","webpack://saturn-fm/src/components/FileReader.js"],"sourcesContent":["import jsmediatags from \"jsmediatags\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * Automatically generate a file input alert, resolves with a FileList instance\n * @param {*} extensions\n * @param {*} allowDirectory\n */\nexport async function filePicker({ extensions, allowDirectory, }) {\n    return new Promise((resolve) => {\n        const fileInput = document.createElement(\"input\");\n        if (extensions)\n            fileInput.setAttribute(\"accept\", extensions);\n        fileInput.type = \"file\";\n        fileInput.multiple = true;\n        fileInput.webkitdirectory = allowDirectory;\n        fileInput.directory = allowDirectory;\n        fileInput.mozdirectory = allowDirectory;\n        fileInput.addEventListener(\"change\", (e) => {\n            resolve(e.target.files); // todo fix\n            document.body.removeChild(fileInput);\n        });\n        document.body.appendChild(fileInput);\n        fileInput.click();\n    });\n}\nfunction getMediaTags(file) {\n    return new Promise((resolve, reject) => {\n        jsmediatags.read(file, {\n            onSuccess: (tag) => resolve(tag),\n            onError: (error) => reject(error),\n        });\n    });\n}\nconst isValidString = (s) => typeof s === \"string\" && s.length;\nasync function generateTrackInfo(file) {\n    let metadata = {};\n    try {\n        metadata = await getMediaTags(file);\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(\"Fetching Tags Error\", err);\n    }\n    const { tags: { artist, album, title, track, picture } = {} } = metadata;\n    let maybAlbumArtBlob;\n    if (picture?.data) {\n        const byteArray = new Uint8Array(picture?.data);\n        const blob = new Blob([byteArray], { type: picture?.format });\n        maybAlbumArtBlob = URL.createObjectURL(blob);\n    }\n    return {\n        file,\n        track: track ?? 0,\n        artist: isValidString(artist) ? artist : \"Unknown Artist\",\n        album: isValidString(album) ? album : \"Unknown Album\",\n        title: isValidString(title) ? title : file.name,\n        albumArtUrl: maybAlbumArtBlob,\n    };\n}\nasync function createTracklist(files) {\n    const filesToAdd = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (const file of Array.from(files)) {\n        if (file.type.includes(\"audio\")) {\n            filesToAdd.push(generateTrackInfo(file));\n        }\n    }\n    const withMetadata = await Promise.all(filesToAdd);\n    return withMetadata.reduce((result, file) => {\n        result.push({ ...file, id: uuidv4() });\n        return result;\n    }, []);\n}\nexport async function getFilesWithTags(options) {\n    let fileList;\n    try {\n        fileList = await filePicker(options);\n        console.log(fileList);\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err);\n        // this.queueToast('Oops, something went wrong fetching your files. Please try again')\n    }\n    const trackList = await createTracklist(fileList);\n    return trackList;\n}\n// a little function to help us with reordering the result\nexport const reorder = (trackList, startIndex, endIndex) => {\n    const result = Array.from(trackList);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { styled } from \"@linaria/react\";\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { getFilesWithTags, reorder } from \"../utilities/files\";\nimport { getLocalizedCopy } from \"../utilities/helpers\";\nimport { Modal } from \"./Modal\";\nimport { audioManagerSingleton, useAudioManagerContext } from \"../audioManager\";\nasync function getTracks() {\n    const tracks = await getFilesWithTags({\n        extensions: \".mp3, .m4a, .flac, .wav, .aac\",\n    });\n    audioManagerSingleton.addTracks(tracks);\n}\nasync function getDirectory() {\n    const tracks = await getFilesWithTags({\n        extensions: \".mp3, .wav, .aac\",\n        allowDirectory: true,\n    });\n    audioManagerSingleton.addTracks(tracks);\n}\nconst getDraggableClasses = ({ isDragging, currentPlaying }) => {\n    return `draggable ${isDragging ? \"isDragging\" : \"\"} ${currentPlaying ? \"currentTrack\" : \"\"}`;\n};\nfunction onDragEnd(result) {\n    const curr = audioManagerSingleton.state.tracks[audioManagerSingleton.state.currentTrackIndex];\n    // dropped outside the list\n    if (!result.destination) {\n        return;\n    }\n    const items = reorder(audioManagerSingleton.state.tracks, result.source.index, result.destination.index);\n    // TODO: lol\n    if (result.source.index === curr) {\n        audioManagerSingleton.setCurrentTrack(result.destination.index);\n    }\n    else if (result.destination.index === curr) {\n        if (result.source.index < curr) {\n            audioManagerSingleton.setCurrentTrack(curr - 1);\n        }\n        else {\n            audioManagerSingleton.setCurrentTrack(result.destination.index ? curr + 1 : 1);\n        }\n    }\n    else if (result.source.index > curr && curr > result.destination.index) {\n        audioManagerSingleton.setCurrentTrack(curr + 1);\n    }\n    else if (result.source.index < curr && curr < result.destination.index) {\n        audioManagerSingleton.setCurrentTrack(curr - 1);\n    }\n    audioManagerSingleton.setNewTrackOrder(items);\n}\n// TODO: Fix event listener leak here\nconst FileReader = (props) => {\n    const { tracks } = useAudioManagerContext();\n    const { fileReader, playlist: playlistCopy } = getLocalizedCopy();\n    return (React.createElement(Modal, { header: fileReader.header },\n        React.createElement(PlaylistWrapper, null,\n            React.createElement(PlaylistHeader, null,\n                React.createElement(\"div\", null, playlistCopy.number),\n                React.createElement(\"div\", null, playlistCopy.title),\n                React.createElement(\"div\", null, playlistCopy.artist),\n                React.createElement(\"div\", null, playlistCopy.album),\n                React.createElement(\"div\", null)),\n            React.createElement(PlaylistEditor, null,\n                React.createElement(DragDropContext, { onDragEnd: onDragEnd },\n                    React.createElement(Droppable, { droppableId: \"droppable\" }, (provided) => (React.createElement(\"div\", { ref: provided.innerRef },\n                        tracks.map(({ artist, album, title, id }, index) => {\n                            // const currentPlaying =\n                            //   isPlaying && item === tracks[currentTrackIndex];\n                            const currentPlaying = false;\n                            return (React.createElement(Draggable, { key: id, draggableId: id, index: index }, (draggableProvided, { isDragging }) => {\n                                return (React.createElement(\"div\", { className: getDraggableClasses({\n                                        isDragging,\n                                        currentPlaying,\n                                    }), ref: draggableProvided.innerRef, ...draggableProvided.draggableProps, ...draggableProvided.dragHandleProps },\n                                    React.createElement(\"div\", null, currentPlaying ? \"▱\" : index + 1),\n                                    React.createElement(\"div\", null, title),\n                                    React.createElement(\"div\", null, artist),\n                                    React.createElement(\"div\", null, album),\n                                    React.createElement(\"button\", { className: \"icon-button\", onClick: () => props.removeTrack(index), type: \"button\" }, \"\\u25B5\")));\n                            }));\n                        }),\n                        provided.placeholder)))))),\n        React.createElement(EditorControlButtons, null,\n            React.createElement(\"button\", { className: \"add-files\", type: \"button\", onClick: () => getDirectory() }, \"Add a directory\"),\n            React.createElement(\"button\", { className: \"add-files\", type: \"button\", onClick: () => getTracks() }, \"Add file(s)\")),\n        React.createElement(PlaylistFooter, null,\n            React.createElement(\"button\", { className: \"exit-button\", type: \"button\", onClick: props.toggleMenu }, \"Exit\"))));\n};\nconst EditorControlButtons = styled.div `\n  margin-top: 2em;\n  button {\n    margin: 0 1em;\n  }\n`;\nconst PlaylistWrapper = styled.div `\n  width: 100%;\n  max-height: calc(var(--vh, 1vh) * 60);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 3px;\n  box-shadow: 0 0 0 2px rgba(53, 59, 101, 0.8),\n    0 0 0 3.5px rgba(149, 149, 149, 0.8), 0 0 0 5px rgba(53, 59, 101, 0.8);\n`;\nconst PlaylistFooter = styled.footer `\n  margin-top: auto;\n`;\nconst PlaylistHeader = styled.div `\n  background-color: rgba(131, 23, 71, 0.65);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.25);\n\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  color: white;\n  text-align: left;\n  font-size: 42px;\n  text-transform: capitalize;\n\n  @media screen and (min-width: 500px) {\n    padding: 14px 0 0;\n  }\n\n  div:nth-child(1) {\n    width: 40px;\n  }\n  // Song\n  div:nth-child(2) {\n    width: 40%;\n    max-width: 400px;\n  }\n  //Artist\n  div:nth-child(3) {\n    width: 25%;\n    max-width: 200px;\n  }\n  // Album\n  div:nth-child(4) {\n    width: 25%;\n    max-width: 200px;\n  }\n  div:nth-child(5) {\n    width: 30px;\n  }\n`;\nconst PlaylistEditor = styled.div `\n  background-color: rgba(131, 23, 71, 0.65);\n  width: 100%;\n\n  .draggable {\n    * {\n      user-select: none; /* Standard */\n    }\n    cursor: grab;\n    border-radius: 2px;\n    margin: 0 0 2px;\n    display: flex;\n    flex-direction: row;\n    text-align: left;\n    align-items: center;\n    font-size: 10px;\n    font-family: ChibiPhoebe;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-size: 20px;\n\n    @media screen and (min-width: 500px) {\n      font-size: 26px;\n      line-height: 14px;\n      padding: 3px 0 3px;\n      margin: 0;\n    }\n    p {\n      margin: 0;\n      padding: 0;\n    }\n    &:hover {\n      animation: selected-item-pulse 3s infinite;\n    }\n    &:active {\n      cursor: grabbing !important;\n    }\n    &.isDragging {\n      cursor: grabbing;\n      border: 1px white;\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 2px;\n    }\n    // Handle\n    div:nth-child(1) {\n      width: 40px;\n    }\n    //Song\n    div:nth-child(2) {\n      width: 40%;\n      max-width: 400px;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n    //Artist\n    div:nth-child(3) {\n      width: 25%;\n      max-width: 300px;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n    // Album\n    div:nth-child(4) {\n      width: 25%;\n      max-width: 300px;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n    button {\n      font-family: ChibiPhoebe;\n      transition: all 200ms ease;\n      color: white;\n      background: none;\n      border: 0;\n      outline: 0;\n      padding: 0;\n      margin: 0 auto;\n      line-height: inherit;\n    }\n  }\n\n  @keyframes selected-item-pulse {\n    0% {\n    background: rgba(255, 255, 255, 0.1);\n  }\n  \n  50% {\n    background: rgba(255, 255, 255, 0.25);\n  }\n  \n  100% {\n    background: rgba(255, 255, 255, 0.1);\n  }\n`;\nFileReader.propTypes = {\n    arrangeTracks: PropTypes.func.isRequired,\n    addTracks: PropTypes.func.isRequired,\n    removeTrack: PropTypes.func.isRequired,\n    toggleMenu: PropTypes.func.isRequired,\n};\nexport default FileReader;\n"],"names":["filePicker","extensions","allowDirectory","Promise","resolve","fileInput","document","createElement","setAttribute","type","multiple","webkitdirectory","directory","mozdirectory","addEventListener","e","target","files","body","removeChild","appendChild","click","getMediaTags","file","reject","jsmediatags","onSuccess","tag","onError","error","isValidString","s","length","generateTrackInfo","metadata","console","log","tags","artist","album","title","track","picture","data","byteArray","Uint8Array","blob","Blob","format","maybAlbumArtBlob","URL","createObjectURL","name","albumArtUrl","createTracklist","filesToAdd","Array","from","includes","push","all","withMetadata","reduce","result","id","uuidv4","getFilesWithTags","options","fileList","trackList","tracks","audioManagerSingleton","getDraggableClasses","isDragging","currentPlaying","onDragEnd","curr","destination","items","startIndex","endIndex","removed","splice","reorder","source","index","FileReader","props","useAudioManagerContext","getLocalizedCopy","fileReader","playlistCopy","playlist","React","Modal","header","PlaylistWrapper","PlaylistHeader","number","PlaylistEditor","DragDropContext","Droppable","droppableId","provided","ref","innerRef","map","Draggable","key","draggableId","draggableProvided","className","draggableProps","dragHandleProps","onClick","removeTrack","placeholder","EditorControlButtons","getDirectory","getTracks","PlaylistFooter","toggleMenu","propTypes","arrangeTracks","PropTypes","addTracks"],"sourceRoot":""}