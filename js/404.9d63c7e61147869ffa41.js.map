{"version":3,"file":"js/404.9d63c7e61147869ffa41.js","mappings":"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","sources":["webpack://saturn-fm/./src/utilities/files.ts","webpack://saturn-fm/src/components/FileReader.js"],"sourcesContent":["import jsmediatags from \"jsmediatags\";\nimport { v4 as uuidv4 } from \"uuid\";\n/**\n * Automatically generate a file input alert, resolves with a FileList instance\n * @param {*} extensions\n * @param {*} allowDirectory\n */\nexport async function filePicker({ extensions, allowDirectory, }) {\n    return new Promise((resolve) => {\n        const fileInput = document.createElement(\"input\");\n        if (extensions)\n            fileInput.setAttribute(\"accept\", extensions);\n        fileInput.type = \"file\";\n        fileInput.multiple = true;\n        fileInput.webkitdirectory = allowDirectory;\n        fileInput.directory = allowDirectory;\n        fileInput.mozdirectory = allowDirectory;\n        fileInput.addEventListener(\"change\", (e) => {\n            resolve(e.target.files); // todo fix\n            document.body.removeChild(fileInput);\n        });\n        document.body.appendChild(fileInput);\n        fileInput.click();\n    });\n}\nfunction getMediaTags(file) {\n    return new Promise((resolve, reject) => {\n        jsmediatags.read(file, {\n            onSuccess: (tag) => resolve(tag),\n            onError: (error) => reject(error),\n        });\n    });\n}\nconst isValidString = (s) => typeof s === \"string\" && s.length;\nasync function generateTrackInfo(file) {\n    let metadata = {};\n    try {\n        metadata = await getMediaTags(file);\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(\"Fetching Tags Error\", err);\n    }\n    const { tags: { artist, album, title, track, picture } = {} } = metadata;\n    let maybAlbumArtBlob;\n    if (picture?.data) {\n        const byteArray = new Uint8Array(picture?.data);\n        const blob = new Blob([byteArray], { type: picture?.format });\n        maybAlbumArtBlob = URL.createObjectURL(blob);\n    }\n    return {\n        file,\n        track: track ?? 0,\n        artist: isValidString(artist) ? artist : \"Unknown Artist\",\n        album: isValidString(album) ? album : \"Unknown Album\",\n        title: isValidString(title) ? title : file.name,\n        albumArtUrl: maybAlbumArtBlob,\n    };\n}\nasync function createTracklist(files) {\n    const filesToAdd = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (const file of Array.from(files)) {\n        if (file.type.includes(\"audio\")) {\n            filesToAdd.push(generateTrackInfo(file));\n        }\n    }\n    const withMetadata = await Promise.all(filesToAdd);\n    return withMetadata.reduce((result, file) => {\n        result.push({ ...file, id: uuidv4() });\n        return result;\n    }, []);\n}\nexport async function getFilesWithTags(options) {\n    let fileList;\n    try {\n        fileList = await filePicker(options);\n        console.log(fileList);\n    }\n    catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err);\n        // this.queueToast('Oops, something went wrong fetching your files. Please try again')\n    }\n    const trackList = await createTracklist(fileList);\n    return trackList;\n}\n// a little function to help us with reordering the result\nexport const reorder = (trackList, startIndex, endIndex) => {\n    const result = Array.from(trackList);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { styled } from \"@linaria/react\";\nimport * as React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { getFilesWithTags, reorder } from \"../utilities/files\";\nimport { getLocalizedCopy } from \"../utilities/helpers\";\nimport { Modal } from \"./Modal\";\nimport { audioManagerSingleton, useAudioManagerContext } from \"../audioManager\";\nasync function getTracks() {\n    const tracks = await getFilesWithTags({\n        extensions: \".mp3, .m4a, .flac, .wav, .aac\",\n    });\n    audioManagerSingleton.addTracks(tracks);\n}\nasync function getDirectory() {\n    const tracks = await getFilesWithTags({\n        extensions: \".mp3, .wav, .aac\",\n        allowDirectory: true,\n    });\n    audioManagerSingleton.addTracks(tracks);\n}\nconst getDraggableClasses = ({ isDragging, currentPlaying }) => {\n    return `draggable ${isDragging ? \"isDragging\" : \"\"} ${currentPlaying ? \"currentTrack\" : \"\"}`;\n};\nfunction onDragEnd(result) {\n    const curr = audioManagerSingleton.state.tracks[audioManagerSingleton.state.currentTrackIndex];\n    // dropped outside the list\n    if (!result.destination) {\n        return;\n    }\n    const items = reorder(audioManagerSingleton.state.tracks, result.source.index, result.destination.index);\n    // TODO: lol\n    if (result.source.index === curr) {\n        audioManagerSingleton.setCurrentTrack(result.destination.index);\n    }\n    else if (result.destination.index === curr) {\n        if (result.source.index < curr) {\n            audioManagerSingleton.setCurrentTrack(curr - 1);\n        }\n        else {\n            audioManagerSingleton.setCurrentTrack(result.destination.index ? curr + 1 : 1);\n        }\n    }\n    else if (result.source.index > curr && curr > result.destination.index) {\n        audioManagerSingleton.setCurrentTrack(curr + 1);\n    }\n    else if (result.source.index < curr && curr < result.destination.index) {\n        audioManagerSingleton.setCurrentTrack(curr - 1);\n    }\n    audioManagerSingleton.setNewTrackOrder(items);\n}\n// TODO: Fix event listener leak here\nconst FileReader = (props) => {\n    const { tracks } = useAudioManagerContext();\n    const { fileReader, playlist: playlistCopy } = getLocalizedCopy();\n    return (React.createElement(Modal, { header: fileReader.header },\n        React.createElement(PlaylistWrapper, null,\n            React.createElement(PlaylistHeader, null,\n                React.createElement(\"div\", null, playlistCopy.number),\n                React.createElement(\"div\", null, playlistCopy.title),\n                React.createElement(\"div\", null, playlistCopy.artist),\n                React.createElement(\"div\", null, playlistCopy.album),\n                React.createElement(\"div\", null)),\n            React.createElement(PlaylistEditor, null,\n                React.createElement(DragDropContext, { onDragEnd: onDragEnd },\n                    React.createElement(Droppable, { droppableId: \"droppable\" }, (provided) => (React.createElement(\"div\", { ref: provided.innerRef },\n                        tracks.map(({ artist, album, title, id }, index) => {\n                            // const currentPlaying =\n                            //   isPlaying && item === tracks[currentTrackIndex];\n                            const currentPlaying = false;\n                            return (React.createElement(Draggable, { key: id, draggableId: id, index: index }, (draggableProvided, { isDragging }) => {\n                                return (React.createElement(\"div\", { className: getDraggableClasses({\n                                        isDragging,\n                                        currentPlaying,\n                                    }), ref: draggableProvided.innerRef, ...draggableProvided.draggableProps, ...draggableProvided.dragHandleProps },\n                                    React.createElement(\"div\", null, currentPlaying ? \"▱\" : index + 1),\n                                    React.createElement(\"div\", null, title),\n                                    React.createElement(\"div\", null, artist),\n                                    React.createElement(\"div\", null, album),\n                                    React.createElement(\"button\", { className: \"icon-button\", onClick: () => props.removeTrack(index), type: \"button\" }, \"\\u25B5\")));\n                            }));\n                        }),\n                        provided.placeholder)))))),\n        React.createElement(EditorControlButtons, null,\n            React.createElement(\"button\", { className: \"add-files\", type: \"button\", onClick: () => getDirectory() }, \"Add a directory\"),\n            React.createElement(\"button\", { className: \"add-files\", type: \"button\", onClick: () => getTracks() }, \"Add file(s)\")),\n        React.createElement(PlaylistFooter, null,\n            React.createElement(ExitButton, { type: \"button\", onClick: props.toggleMenu }, \"Exit\"))));\n};\nconst EditorControlButtons = styled.div `\n  margin-top: 2em;\n  button {\n    margin: 0 1em;\n  }\n`;\nconst PlaylistWrapper = styled.div `\n  width: 100%;\n  max-height: calc(var(--vh, 1vh) * 60);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 3px;\n  box-shadow: 0 0 0 2px rgba(53, 59, 101, 0.8),\n    0 0 0 3.5px rgba(149, 149, 149, 0.8), 0 0 0 5px rgba(53, 59, 101, 0.8);\n`;\nconst PlaylistFooter = styled.footer `\n  margin-top: auto;\n`;\nconst PlaylistHeader = styled.div `\n  background-color: rgba(131, 23, 71, 0.65);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.25);\n\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  color: white;\n  text-align: left;\n  font-size: 42px;\n  text-transform: capitalize;\n\n  @media screen and (min-width: 500px) {\n    padding: 14px 0 0;\n  }\n\n  div:nth-child(1) {\n    width: 40px;\n  }\n  // Song\n  div:nth-child(2) {\n    width: 40%;\n    max-width: 400px;\n  }\n  //Artist\n  div:nth-child(3) {\n    width: 25%;\n    max-width: 200px;\n  }\n  // Album\n  div:nth-child(4) {\n    width: 25%;\n    max-width: 200px;\n  }\n  div:nth-child(5) {\n    width: 30px;\n  }\n`;\nconst PlaylistEditor = styled.div `\n  background-color: rgba(131, 23, 71, 0.65);\n  width: 100%;\n\n  .draggable {\n    * {\n      user-select: none; /* Standard */\n    }\n    cursor: grab;\n    border-radius: 2px;\n    margin: 0 0 2px;\n    display: flex;\n    flex-direction: row;\n    text-align: left;\n    align-items: center;\n    font-size: 10px;\n    font-family: ChibiPhoebe;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-size: 20px;\n\n    @media screen and (min-width: 500px) {\n      font-size: 26px;\n      line-height: 14px;\n      padding: 3px 0 3px;\n      margin: 0;\n    }\n    p {\n      margin: 0;\n      padding: 0;\n    }\n    &:hover {\n      animation: selected-item-pulse 3s infinite;\n    }\n    &:active {\n      cursor: grabbing !important;\n    }\n    &.isDragging {\n      cursor: grabbing;\n      border: 1px white;\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 2px;\n    }\n    // Handle\n    div:nth-child(1) {\n      width: 40px;\n    }\n    //Song\n    div:nth-child(2) {\n      width: 40%;\n      max-width: 400px;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n    //Artist\n    div:nth-child(3) {\n      width: 25%;\n      max-width: 300px;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n    // Album\n    div:nth-child(4) {\n      width: 25%;\n      max-width: 300px;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n    button {\n      font-family: ChibiPhoebe;\n      transition: all 200ms ease;\n      color: white;\n      background: none;\n      border: 0;\n      outline: 0;\n      padding: 0;\n      margin: 0 auto;\n      line-height: inherit;\n    }\n  }\n\n  @keyframes selected-item-pulse {\n    0% {\n    background: rgba(255, 255, 255, 0.1);\n  }\n  \n  50% {\n    background: rgba(255, 255, 255, 0.25);\n  }\n  \n  100% {\n    background: rgba(255, 255, 255, 0.1);\n  }\n`;\nconst ExitButton = styled.button `\n  border-radius: 3px;\n  box-shadow: 0 0 0 2px rgba(53, 59, 101, 0.8),\n    0 0 0 3.5px rgba(149, 149, 149, 0.8), 0 0 0 5px rgba(53, 59, 101, 0.8);\n  display: block;\n  margin: 0 auto;\n  margin-top: auto;\n  color: white;\n  font-family: Phoebe;\n  font-size: 36px;\n  padding: 14px 14px 10px;\n  background-color: rgba(93, 21, 122, 0.8);\n  border: 0;\n  cursor: pointer;\n`;\n// FileReader.propTypes = {\n//   arrangeTracks: PropTypes.func.isRequired,\n//   addTracks: PropTypes.func.isRequired,\n//   removeTrack: PropTypes.func.isRequired,\n//   toggleMenu: PropTypes.func.isRequired,\n// };\nexport default FileReader;\n"],"names":["isValidString","s","length","async","generateTrackInfo","file","metadata","Promise","resolve","reject","jsmediatags","onSuccess","tag","onError","error","getMediaTags","err","console","log","tags","artist","album","title","track","picture","maybAlbumArtBlob","data","byteArray","Uint8Array","blob","Blob","type","format","URL","createObjectURL","name","albumArtUrl","getFilesWithTags","options","fileList","extensions","allowDirectory","fileInput","document","createElement","setAttribute","multiple","webkitdirectory","directory","mozdirectory","addEventListener","e","target","files","body","removeChild","appendChild","click","filePicker","filesToAdd","Array","from","includes","push","all","reduce","result","id","uuidv4","createTracklist","getDraggableClasses","isDragging","currentPlaying","onDragEnd","curr","audioManagerSingleton","destination","items","trackList","startIndex","endIndex","removed","splice","reorder","source","index","EditorControlButtons","class","PlaylistWrapper","PlaylistFooter","PlaylistHeader","PlaylistEditor","ExitButton","props","tracks","useAudioManagerContext","fileReader","playlist","playlistCopy","getLocalizedCopy","React","Modal","header","number","DragDropContext","Droppable","droppableId","provided","ref","innerRef","map","Draggable","key","draggableId","draggableProvided","className","draggableProps","dragHandleProps","onClick","removeTrack","placeholder","getDirectory","getTracks","toggleMenu"],"sourceRoot":""}